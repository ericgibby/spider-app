{"version":3,"sources":["components/Spider/spider-00.svg","components/Spider/spider-01.svg","components/Spider/spider-02.svg","components/Spider/spider-03.svg","components/Spider/spider-04.svg","components/Spider/spider-05.svg","components/Spider/spider-06.svg","components/Spider/spider-07.svg","components/Spider/spider-08.svg","components/Spider/spider-09.svg","components/Spider/spider-10.svg","components/Callout/Callout.tsx","components/DifficultyPicker/DifficultyPicker.tsx","components/LetterButtons/LetterButtons.tsx","components/MaskedText/MaskedText.tsx","components/Spider/Spider.tsx","redux/modules/play.ts","redux/selectors/play.ts","containers/PlayContainer.tsx","components/Button/Button.tsx","components/TextInput/TextInput.tsx","components/TextInputForm/TextInputForm.tsx","containers/StartContainer.tsx","App.tsx","redux/root.ts","services/dictionaryApi.ts","redux/configureStore.ts","reportWebVitals.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","Callout","children","hidden","type","className","DifficultyPicker","disabled","onChange","options","value","e","val","parseInt","target","map","text","key","ALPHABET","Array","fill","_","index","String","fromCharCode","LetterButtons","onClick","usedLetters","handleClick","character","letters","useMemo","getLettersMap","toUpperCase","split","selectedLetters","buttons","letter","reduce","obj","MaskedText","parts","word","characters","code","charCodeAt","join","getCharacters","part","i","arr","slice","length","IMAGES","require","Spider","step","src","alt","addUsedLetter","createAction","cancelSetText","setInvalid","setMaxIncorrect","setText","reducer","createReducer","maxIncorrect","builder","addCase","state","payload","invalid","selectInvalid","play","selectMaxIncorrect","selectText","selectUsedLetters","selectTextLettersMap","createSelector","selectCorrectCount","textLetters","correct","selectIncorrectCount","incorrect","selectCurrentStep","incorrectCount","DIFFICULTY_OPTIONS","PlayContainer","dispatch","useDispatch","history","useHistory","correctCount","useSelector","useEffect","push","loser","winner","Object","keys","level","role","aria-label","Button","TextInput","label","onToggle","toggleText","placeholder","TextInputForm","onSubmit","useState","setValue","visible","setVisible","preventDefault","v","StartContainer","App","path","component","to","rootEpic","combineEpics","action$","pipe","ofType","filter","switchMap","words","replace","toLowerCase","lookups","fromFetch","process","encodeURIComponent","response","ok","from","json","lookupWord","retryWhen","errors$","zip","range","mergeMap","attempt","timer","forkJoin","takeUntil","results","valid","some","meta","stems","includes","catchError","err","console","error","of","rootReducer","combineReducers","persistReducer","storage","defaultMiddleware","getDefaultMiddleware","serializableCheck","ignoredActions","epicMiddleware","createEpicMiddleware","middleware","store","configureStore","run","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","persistor","persistStore","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.50687e19.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spider-00.232ad789.svg\";","module.exports = __webpack_public_path__ + \"static/media/spider-01.94a5fbe9.svg\";","module.exports = __webpack_public_path__ + \"static/media/spider-02.5adff19f.svg\";","module.exports = __webpack_public_path__ + \"static/media/spider-03.eae3122a.svg\";","module.exports = __webpack_public_path__ + \"static/media/spider-04.431a4e58.svg\";","module.exports = __webpack_public_path__ + \"static/media/spider-05.81454eb1.svg\";","module.exports = __webpack_public_path__ + \"static/media/spider-06.442a6ca9.svg\";","module.exports = __webpack_public_path__ + \"static/media/spider-07.cd612159.svg\";","module.exports = __webpack_public_path__ + \"static/media/spider-08.f3da2507.svg\";","module.exports = __webpack_public_path__ + \"static/media/spider-09.c0e9d028.svg\";","module.exports = __webpack_public_path__ + \"static/media/spider-10.6a37e96e.svg\";","import React, { ReactNode, ReactNodeArray } from 'react';\n\ntype CalloutProps = {\n\tchildren?: ReactNode | ReactNodeArray;\n\thidden?: boolean;\n\ttype?: 'error' | 'success' | 'warning';\n};\n\nfunction Callout({ children, hidden, type }: CalloutProps) {\n\treturn hidden ? null : (\n\t\t<div\n\t\t\tclassName={`mt-4 p-6 border rounded-md${\n\t\t\t\ttype === 'error' ? ' bg-red-200 border-red-500' : ''\n\t\t\t}${type === 'success' ? ' bg-blue-200 border-blue-500' : ''}${\n\t\t\t\ttype === 'warning' ? ' bg-orange-200 border-orange-500' : ''\n\t\t\t}${!type ? ' bg-gray-200 border-gray-500' : ''}`}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n\nexport default Callout;\n","import React, { ChangeEvent } from 'react';\n\ntype DifficultyPickerProps = {\n\tdisabled?: boolean;\n\toptions?: { text: string; value: number }[];\n\tvalue?: number;\n\tonChange?: (value: number) => void;\n};\n\nfunction DifficultyPicker({\n\tdisabled,\n\tonChange,\n\toptions,\n\tvalue\n}: DifficultyPickerProps) {\n\tconst handleChange = (e: ChangeEvent<HTMLSelectElement>) => {\n\t\tconst val = parseInt(e.target.value, 10);\n\t\tonChange?.(val);\n\t};\n\n\treturn (\n\t\t<label className=\"DifficultyPicker flex items-center\">\n\t\t\t<span className=\"hidden md:inline mr-2\">Difficulty:</span>\n\t\t\t<select\n\t\t\t\tclassName=\"px-4 py-2 border border-gray-500 rounded-md\"\n\t\t\t\tdisabled={disabled}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={value}\n\t\t\t>\n\t\t\t\t{options &&\n\t\t\t\t\toptions.map(({ text, value }) => (\n\t\t\t\t\t\t<option key={value} value={value}>\n\t\t\t\t\t\t\t{text}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t))}\n\t\t\t</select>\n\t\t</label>\n\t);\n}\n\nexport default DifficultyPicker;\n","import React, { SyntheticEvent, useMemo } from 'react';\n\n// Generate array with all letters of the alphabet\nconst ALPHABET = new Array(26)\n\t.fill('')\n\t.map((_, index) => String.fromCharCode(65 + index));\n\ntype LetterButtonsProps = {\n\tdisabled?: boolean;\n\ttext?: string;\n\tusedLetters?: string[];\n\tonClick?: (letter: string) => void;\n};\n\nfunction LetterButtons({\n\tdisabled,\n\tonClick,\n\ttext,\n\tusedLetters\n}: LetterButtonsProps) {\n\tconst handleClick = (e: SyntheticEvent) => {\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\tconst character = (e.target as any).value;\n\t\tonClick?.(character);\n\t};\n\n\t// Create map objects of letters in `text` and `usedLetters`\n\tconst letters = useMemo(\n\t\t() => getLettersMap((text || '').toUpperCase().split('')),\n\t\t[text]\n\t);\n\tconst selectedLetters = useMemo(() => getLettersMap(usedLetters), [\n\t\tusedLetters\n\t]);\n\n\tconst buttons = ALPHABET.map(letter => (\n\t\t<button\n\t\t\tkey={letter}\n\t\t\tclassName={`h-12 w-12 m-1 rounded-md focus:outline-none text-white border${\n\t\t\t\tselectedLetters[letter] && !letters[letter]\n\t\t\t\t\t? ' bg-red-600 border-red-700 hover:bg-red-700 hover:border-red-800'\n\t\t\t\t\t: ' bg-blue-600 border-blue-700 hover:bg-blue-700 hover:border-blue-800'\n\t\t\t}${\n\t\t\t\tselectedLetters[letter] || disabled\n\t\t\t\t\t? ' opacity-25 cursor-not-allowed'\n\t\t\t\t\t: ''\n\t\t\t}`}\n\t\t\tvalue={letter}\n\t\t\tonClick={handleClick}\n\t\t\tdisabled={!!selectedLetters[letter] || disabled}\n\t\t>\n\t\t\t{letter}\n\t\t</button>\n\t));\n\n\treturn <div className=\"LetterButtons\">{buttons}</div>;\n}\n\nexport default LetterButtons;\n\nfunction getLettersMap(letters: string[] = []) {\n\treturn letters.reduce(\n\t\t(obj, letter) => ({ ...obj, [letter]: true }),\n\t\t{} as { [key: string]: boolean }\n\t);\n}\n","import React, { useMemo } from 'react';\n\ntype MaskedTextProps = {\n\ttext?: string;\n\tusedLetters?: string[];\n};\n\nfunction MaskedText({ text, usedLetters }: MaskedTextProps) {\n\tconst words = useMemo(() => getCharacters(text, usedLetters).split(' '), [\n\t\ttext,\n\t\tusedLetters\n\t]);\n\tconst parts = words\n\t\t.map((part, index) => {\n\t\t\tconst letters = part.split('').map((letter, i) => (\n\t\t\t\t<span\n\t\t\t\t\tkey={`Letter-${i}`}\n\t\t\t\t\tclassName=\"inline-block my-0 ml-0 mr-2\"\n\t\t\t\t>\n\t\t\t\t\t{letter}\n\t\t\t\t</span>\n\t\t\t));\n\t\t\treturn (\n\t\t\t\t<span key={`Word-${index}`} className=\"whitespace-no-wrap\">\n\t\t\t\t\t{letters}\n\t\t\t\t</span>\n\t\t\t);\n\t\t})\n\t\t.reduce(\n\t\t\t(arr, part, index) => [\n\t\t\t\t...arr,\n\t\t\t\tpart,\n\t\t\t\t<span key={`Space-${index}`}>&nbsp;</span>\n\t\t\t],\n\t\t\t[] as JSX.Element[]\n\t\t)\n\t\t.slice(0, -1); // Remove trailing space\n\n\treturn parts.length ? (\n\t\t<div className=\"MaskedText text-4xl md:text-6xl\">{parts}</div>\n\t) : null;\n}\n\nexport default MaskedText;\n\nexport function getCharacters(word: string = '', letters: string[] = []) {\n\t// Convert array to map for faster lookup\n\tconst usedLetters = letters.reduce(\n\t\t(obj, letter) => ({ ...obj, [letter]: true }),\n\t\t{} as { [key: string]: boolean }\n\t);\n\tconst characters = word\n\t\t.toUpperCase()\n\t\t.split('')\n\t\t.map(letter => {\n\t\t\t// Only mask letters between 65-90 (A-Z)\n\t\t\tconst code = letter.charCodeAt(0);\n\t\t\tif (code >= 65 && code <= 90) {\n\t\t\t\treturn usedLetters[letter] ? letter : '_';\n\t\t\t}\n\t\t\treturn letter;\n\t\t});\n\treturn characters.join('');\n}\n","import React from 'react';\n\nconst IMAGES = [\n\trequire('./spider-00.svg'),\n\trequire('./spider-01.svg'),\n\trequire('./spider-02.svg'),\n\trequire('./spider-03.svg'),\n\trequire('./spider-04.svg'),\n\trequire('./spider-05.svg'),\n\trequire('./spider-06.svg'),\n\trequire('./spider-07.svg'),\n\trequire('./spider-08.svg'),\n\trequire('./spider-09.svg'),\n\trequire('./spider-10.svg')\n];\n\ntype SpiderProps = {\n\tstep?: number;\n};\n\nfunction Spider({ step = 0 }: SpiderProps) {\n\tconst src =\n\t\tstep >= IMAGES.length ? IMAGES[IMAGES.length - 1] : IMAGES[step];\n\treturn (\n\t\t<div className=\"Spider\">\n\t\t\t<img alt=\"Spider\" src={src} />\n\t\t</div>\n\t);\n}\n\nexport default Spider;\n","import { createAction, createReducer, PayloadAction } from '@reduxjs/toolkit';\nimport { ActionsObservable, ofType } from 'redux-observable';\nimport { forkJoin, of, range, timer, zip } from 'rxjs';\nimport {\n\tcatchError,\n\tfilter,\n\tmap,\n\tmergeMap,\n\tretryWhen,\n\tswitchMap,\n\ttakeUntil\n} from 'rxjs/operators';\nimport { lookupWord } from '../../services/dictionaryApi';\n\nexport const DEFAULT_MAX_INCORRECT = 10;\n\n// Action creators\n\nexport const addUsedLetter = createAction<string>('play/ADD_USED_LETTER');\nexport const cancelSetText = createAction('play/CANCEL_SET_TEXT');\nexport const setInvalid = createAction<boolean>('play/SET_INVALID');\nexport const setMaxIncorrect = createAction<number>('play/SET_MAX_INCORRECT');\nexport const setText = createAction<string>('play/SET_TEXT');\n\n// Epics\n\nexport function setTextEpic(action$: ActionsObservable<PayloadAction<string>>) {\n\treturn action$.pipe(\n\t\tofType(setText.type),\n\t\tfilter(({ payload }) => !!payload),\n\t\tswitchMap(({ payload: text }) => {\n\t\t\t// Get list of unique words\n\t\t\tconst words = Object.keys(\n\t\t\t\t// Split on white space to get individual words\n\t\t\t\ttext.split(/\\s/).reduce((obj, word) => {\n\t\t\t\t\t// Remove non-alpha characters at beginning or end of word\n\t\t\t\t\tconst key = word\n\t\t\t\t\t\t.replace(/^[^\\w]+|[^\\w]+$/, '')\n\t\t\t\t\t\t.toLowerCase();\n\t\t\t\t\treturn { ...obj, [key]: true };\n\t\t\t\t}, {} as { [key: string]: boolean })\n\t\t\t);\n\n\t\t\t// Make individual requests in parallel\n\t\t\tconst lookups = words.map(word => {\n\t\t\t\treturn lookupWord(word).pipe(\n\t\t\t\t\tretryWhen(errors$ =>\n\t\t\t\t\t\tzip(range(0, 3), errors$).pipe(\n\t\t\t\t\t\t\tmergeMap(([attempt]) => timer(attempt * 1000))\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t});\n\n\t\t\t// Wait for all requests, then check validity of each word\n\t\t\treturn forkJoin(lookups).pipe(\n\t\t\t\ttakeUntil(action$.pipe(ofType(cancelSetText.type))),\n\t\t\t\tmap(results => {\n\t\t\t\t\tconst invalid = !results.reduce((valid, results, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tvalid &&\n\t\t\t\t\t\t\tresults.some(({ meta }) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\tmeta?.stems.includes(words[index]) || false\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t}, true);\n\t\t\t\t\treturn setInvalid(invalid);\n\t\t\t\t}),\n\t\t\t\tcatchError(err => {\n\t\t\t\t\tconsole.error(err);\n\n\t\t\t\t\t// Don't want to potentially show a false warning if there\n\t\t\t\t\t// is an API error.\n\t\t\t\t\treturn of(setInvalid(false));\n\t\t\t\t})\n\t\t\t);\n\t\t})\n\t);\n}\n\n// Reducer\n\ntype PlayState = {\n\tinvalid?: boolean;\n\tmaxIncorrect: number;\n\ttext?: string;\n\tusedLetters: string[];\n};\n\nconst reducer = createReducer(\n\t{ maxIncorrect: DEFAULT_MAX_INCORRECT, usedLetters: [] } as PlayState,\n\tbuilder =>\n\t\tbuilder\n\t\t\t.addCase(\n\t\t\t\taddUsedLetter,\n\t\t\t\t({ usedLetters, ...state }, { payload }) => ({\n\t\t\t\t\t...state,\n\t\t\t\t\tusedLetters: [...usedLetters, payload]\n\t\t\t\t})\n\t\t\t)\n\t\t\t.addCase(setInvalid, (state, { payload: invalid }) => ({\n\t\t\t\t...state,\n\t\t\t\tinvalid\n\t\t\t}))\n\t\t\t.addCase(setMaxIncorrect, (state, { payload: maxIncorrect }) => ({\n\t\t\t\t...state,\n\t\t\t\tmaxIncorrect\n\t\t\t}))\n\t\t\t.addCase(setText, (state, { payload: text }) => ({\n\t\t\t\t...state,\n\t\t\t\ttext: text?.toUpperCase(),\n\t\t\t\tusedLetters: []\n\t\t\t}))\n);\n\nexport default reducer;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { RootStateOrAny } from 'react-redux';\n\nexport function selectInvalid(state: RootStateOrAny) {\n\treturn !!state.play.invalid;\n}\n\nexport function selectMaxIncorrect(state: RootStateOrAny) {\n\treturn state.play.maxIncorrect as number;\n}\n\nexport function selectText(state: RootStateOrAny) {\n\treturn state.play.text as string;\n}\n\nexport function selectUsedLetters(state: RootStateOrAny) {\n\treturn state.play.usedLetters as string[];\n}\n\n// Memoized selectors\n\nexport const selectTextLettersMap = createSelector([selectText], text =>\n\t(text || '').split('').reduce((obj, letter) => {\n\t\t// We only care about characters between 65-90 (A-Z)\n\t\tconst code = letter.charCodeAt(0);\n\t\tif (code >= 65 && code <= 90) {\n\t\t\treturn { ...obj, [letter]: true };\n\t\t}\n\t\treturn obj;\n\t}, {} as { [letter: string]: boolean })\n);\n\nexport const selectCorrectCount = createSelector(\n\t[selectTextLettersMap, selectUsedLetters],\n\t(textLetters, usedLetters) =>\n\t\tusedLetters.reduce(\n\t\t\t(correct, letter) => (textLetters[letter] ? correct + 1 : correct),\n\t\t\t0\n\t\t)\n);\n\nexport const selectIncorrectCount = createSelector(\n\t[selectTextLettersMap, selectUsedLetters],\n\t(textLetters, usedLetters) =>\n\t\tusedLetters.reduce(\n\t\t\t(incorrect, letter) =>\n\t\t\t\t!textLetters[letter] ? incorrect + 1 : incorrect,\n\t\t\t0\n\t\t)\n);\n\nexport const selectCurrentStep = createSelector(\n\t[selectIncorrectCount, selectMaxIncorrect],\n\t(incorrectCount, maxIncorrect) => {\n\t\tif (incorrectCount <= 2) {\n\t\t\treturn incorrectCount;\n\t\t}\n\t\tif (maxIncorrect === 6) {\n\t\t\treturn [4, 6, 8, 10][incorrectCount - 3];\n\t\t}\n\t\tif (maxIncorrect === 4) {\n\t\t\treturn [6, 10][incorrectCount - 3];\n\t\t}\n\t\treturn incorrectCount;\n\t}\n);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Callout from '../components/Callout/Callout';\nimport DifficultyPicker from '../components/DifficultyPicker/DifficultyPicker';\nimport LetterButtons from '../components/LetterButtons/LetterButtons';\nimport MaskedText from '../components/MaskedText/MaskedText';\nimport Spider from '../components/Spider/Spider';\nimport {\n\taddUsedLetter,\n\tsetMaxIncorrect,\n\tsetText,\n\tcancelSetText\n} from '../redux/modules/play';\nimport {\n\tselectCorrectCount,\n\tselectCurrentStep,\n\tselectIncorrectCount,\n\tselectInvalid,\n\tselectMaxIncorrect,\n\tselectText,\n\tselectTextLettersMap,\n\tselectUsedLetters\n} from '../redux/selectors/play';\n\nconst DIFFICULTY_OPTIONS = [\n\t{ text: 'Easy', value: 10 },\n\t{ text: 'Medium', value: 6 },\n\t{ text: 'Hard', value: 4 }\n];\n\nfunction PlayContainer() {\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\n\tconst correctCount = useSelector(selectCorrectCount);\n\tconst incorrectCount = useSelector(selectIncorrectCount);\n\tconst invalid = useSelector(selectInvalid);\n\tconst maxIncorrect = useSelector(selectMaxIncorrect);\n\tconst step = useSelector(selectCurrentStep);\n\tconst text = useSelector(selectText);\n\tconst textLetters = useSelector(selectTextLettersMap);\n\tconst usedLetters = useSelector(selectUsedLetters);\n\n\tuseEffect(() => {\n\t\tif (!text) {\n\t\t\thistory.push('/start');\n\t\t}\n\t\treturn () => {\n\t\t\tdispatch(cancelSetText());\n\t\t};\n\t}, [dispatch, history, text]);\n\n\tconst loser = incorrectCount === maxIncorrect;\n\tconst winner = correctCount === Object.keys(textLetters).length;\n\n\tconst handleChange = (level: number) => {\n\t\tdispatch(setMaxIncorrect(level));\n\t};\n\n\tconst handleClickLetter = (letter: string) => {\n\t\tdispatch(addUsedLetter(letter));\n\t};\n\n\tconst handleClickStartOver = () => {\n\t\tdispatch(setText(''));\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"flex flex-col md:flex-row md:items-center md:justify-between\">\n\t\t\t\t<DifficultyPicker\n\t\t\t\t\tdisabled={usedLetters.length > 0}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\toptions={DIFFICULTY_OPTIONS}\n\t\t\t\t\tvalue={maxIncorrect}\n\t\t\t\t/>\n\t\t\t\t<div className=\"mt-2 md:mt-0\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"px-4 py-2 border border-blue-700 hover:border-blue-800 rounded-md text-blue-700 hover:text-blue-800\"\n\t\t\t\t\t\tonClick={handleClickStartOver}\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t>\n\t\t\t\t\t\tStart Over\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Callout hidden={!invalid} type=\"warning\">\n\t\t\t\tText may contain invalid word(s).{' '}\n\t\t\t\t<span role=\"img\" aria-label=\"confused emoji\">\n\t\t\t\t\t😕\n\t\t\t\t</span>\n\t\t\t</Callout>\n\t\t\t<Callout hidden={!loser} type=\"error\">\n\t\t\t\tSorry. You lost.{' '}\n\t\t\t\t<span role=\"img\" aria-label=\"sad emoji\">\n\t\t\t\t\t😢\n\t\t\t\t</span>\n\t\t\t</Callout>\n\t\t\t<Callout hidden={!winner} type=\"success\">\n\t\t\t\tCongratulations! You won!{' '}\n\t\t\t\t<span role=\"img\" aria-label=\"smiley emoji\">\n\t\t\t\t\t😁\n\t\t\t\t</span>\n\t\t\t</Callout>\n\t\t\t<div className=\"mb-6 py-4 border-b border-gray-500 text-center\">\n\t\t\t\t<MaskedText text={text} usedLetters={usedLetters} />\n\t\t\t</div>\n\t\t\t<div className=\"grid gap-6 grid-cols-1 md:grid-cols-2\">\n\t\t\t\t<Spider step={step} />\n\t\t\t\t<LetterButtons\n\t\t\t\t\tdisabled={winner || loser}\n\t\t\t\t\tonClick={handleClickLetter}\n\t\t\t\t\ttext={text}\n\t\t\t\t\tusedLetters={usedLetters}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default PlayContainer;\n","import React, { SyntheticEvent } from 'react';\n\ntype ButtonProps = {\n\ttext: string;\n\ttype?: 'button' | 'submit';\n\tonClick?: (e: SyntheticEvent) => void;\n};\n\nfunction Button({ onClick, text, type = 'button' }: ButtonProps) {\n\treturn (\n\t\t<button\n\t\t\tclassName=\"px-4 py-2 bg-blue-600 border border-blue-700 text-white hover:bg-blue-700 hover:border-blue-800 rounded-md focus:shadow-outline\"\n\t\t\tonClick={onClick}\n\t\t\ttype={type}\n\t\t>\n\t\t\t{text}\n\t\t</button>\n\t);\n}\n\nexport default Button;\n","import React, { ChangeEvent, SyntheticEvent } from 'react';\n\ntype TextInputProps = {\n\tlabel?: string;\n\ttoggleText?: string;\n\ttype?: 'number' | 'password' | 'text';\n\tvalue?: string;\n\tonChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n\tonToggle?: (e: SyntheticEvent) => void;\n};\n\nfunction TextInput({\n\tlabel,\n\tonChange,\n\tonToggle,\n\ttoggleText,\n\ttype = 'text',\n\tvalue\n}: TextInputProps) {\n\treturn (\n\t\t<label className=\"TextInput flex items-center px-4 py-2 border border-gray-500 rounded-md \">\n\t\t\t{label && <span className=\"sr-only\">{label}</span>}\n\t\t\t<input\n\t\t\t\tclassName=\"flex-1 focus:outline-none\"\n\t\t\t\tonChange={onChange}\n\t\t\t\tplaceholder={label}\n\t\t\t\ttype={type}\n\t\t\t\tvalue={value}\n\t\t\t/>\n\t\t\t{toggleText && (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"flex-initial ml-2 text-blue-400 hover:text-blue-500 uppercase text-sm focus:outline-none\"\n\t\t\t\t\tonClick={onToggle}\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t>\n\t\t\t\t\t{toggleText}\n\t\t\t\t</button>\n\t\t\t)}\n\t\t</label>\n\t);\n}\n\nexport default TextInput;\n","import React, { ChangeEvent, FormEvent, SyntheticEvent, useState } from 'react';\nimport Button from '../Button/Button';\nimport TextInput from '../TextInput/TextInput';\n\nexport type TextInputFormProps = {\n\tonSubmit?: (text: string) => void;\n};\n\nfunction TextInputForm({ onSubmit }: TextInputFormProps) {\n\tconst [value, setValue] = useState('');\n\tconst [visible, setVisible] = useState(false);\n\n\tconst handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tconst value = e.target.value || '';\n\t\tsetValue(value);\n\t};\n\n\tconst handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault();\n\t\tonSubmit?.(value);\n\t};\n\n\tconst handleToggle = (e: SyntheticEvent) => {\n\t\te.preventDefault();\n\t\tsetVisible(v => !v);\n\t};\n\n\treturn (\n\t\t<form className=\"flex\" onSubmit={handleSubmit}>\n\t\t\t<div className=\"flex-1 mr-2\">\n\t\t\t\t<TextInput\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonToggle={handleToggle}\n\t\t\t\t\tlabel=\"Enter a word or phrase\"\n\t\t\t\t\ttoggleText={visible ? 'hide' : 'show'}\n\t\t\t\t\ttype={visible ? 'text' : 'password'}\n\t\t\t\t\tvalue={value}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"flex-initial\">\n\t\t\t\t<Button text=\"OK\" type=\"submit\" />\n\t\t\t</div>\n\t\t</form>\n\t);\n}\n\nexport default TextInputForm;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport TextInputForm from '../components/TextInputForm/TextInputForm';\nimport { setText } from '../redux/modules/play';\nimport { selectText } from '../redux/selectors/play';\n\nfunction StartContainer() {\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\n\tconst text = useSelector(selectText);\n\n\tuseEffect(() => {\n\t\tif (text) {\n\t\t\thistory.push('/play');\n\t\t}\n\t}, [history, text]);\n\n\tconst handleSubmit = (text: string) => {\n\t\tdispatch(setText(text));\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<p className=\"mb-2\">\n\t\t\t\tEnter a word or phrase for other players to guess.\n\t\t\t</p>\n\t\t\t<TextInputForm onSubmit={handleSubmit} />\n\t\t</>\n\t);\n}\n\nexport default StartContainer;\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport PlayContainer from './containers/PlayContainer';\nimport StartContainer from './containers/StartContainer';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"py-6 bg-blue-600 text-white\">\n\t\t\t\t<h1 className=\"container px-2 mx-auto text-5xl\">Spider</h1>\n\t\t\t</header>\n\t\t\t<div className=\"container px-2 my-8 mx-auto\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/start\" component={StartContainer} />\n\t\t\t\t\t<Route path=\"/play\" component={PlayContainer} />\n\t\t\t\t\t<Redirect path=\"*\" to=\"/start\" />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport { combineEpics, Epic } from 'redux-observable';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport play, { setTextEpic } from './modules/play';\n\nexport const rootEpic = combineEpics(setTextEpic) as Epic;\n\nconst rootReducer = combineReducers({\n\tplay: persistReducer({ key: 'play', storage }, play)\n});\n\nexport default rootReducer;\n","import { from, Observable } from 'rxjs';\nimport { fromFetch } from 'rxjs/fetch';\nimport { switchMap } from 'rxjs/operators';\n\nconst API_KEY = process.env.REACT_APP_DICTIONARY_API_KEY;\nconst BASE_URL = process.env.REACT_APP_DICTIONARY_API_URL;\n\ntype DictionaryItem = {\n\tmeta?: { stems: string[] };\n};\n\nexport function lookupWord(word: string) {\n\treturn fromFetch(\n\t\t`${BASE_URL}/${encodeURIComponent(word)}?key=${API_KEY}`\n\t).pipe(\n\t\tswitchMap(response => {\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow response;\n\t\t\t}\n\t\t\treturn from(response.json()) as Observable<DictionaryItem[]>;\n\t\t})\n\t);\n}\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { createEpicMiddleware } from 'redux-observable';\nimport reducer, { rootEpic } from './root';\n\nconst defaultMiddleware = getDefaultMiddleware({\n\tserializableCheck: {\n\t\tignoredActions: [\n\t\t\t// 👇 These are from a 3rd party library, so we'll just have to ignore them.\n\t\t\t'persist/PERSIST',\n\t\t\t'persist/REHYDRATE'\n\t\t]\n\t}\n});\nconst epicMiddleware = createEpicMiddleware();\nconst middleware = [...defaultMiddleware, epicMiddleware];\n\nconst store = configureStore({ middleware, reducer });\n\nepicMiddleware.run(rootEpic);\n\nexport default store;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://cra.link/PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://cra.link/PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' }\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null &&\n\t\t\t\t\tcontentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport './index.css';\nimport store from './redux/configureStore';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nconst basename = process.env.NODE_ENV === 'production' ? '/spider-app' : '/';\n\nconst persistor = persistStore(store);\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<PersistGate persistor={persistor}>\n\t\t\t\t<BrowserRouter basename={basename}>\n\t\t\t\t\t<App />\n\t\t\t\t</BrowserRouter>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}